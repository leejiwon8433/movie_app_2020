{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["About","className","Movie","id","year","title","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","key","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","Detail","props","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"8TAWeA,MARf,WACI,OACI,yBAAKC,UAAU,oBACX,mD,gFCuCGC,MAxCf,YAA6D,IAA5CC,EAA2C,EAA3CA,GAAIC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC/C,OACA,kBAAC,IAAD,CAAMC,GAAI,CACNC,SAAS,UAAD,OAAYP,GACpBQ,MAAO,CACHP,OACAC,QACAC,UACAC,SACAC,YAGJ,yBAAKP,UAAU,SACX,yBAAKW,IAAKL,EAAQM,IAAKR,EAAOA,MAAOA,IACrC,yBAAKJ,UAAU,eACX,wBAAIA,UAAU,gBAAgBI,GAC9B,wBAAIJ,UAAU,eAAeG,GAC7B,wBAAIH,UAAU,UACTO,EAAOM,KAAI,SAACC,EAAOC,GAAR,OACR,wBAAIC,IAAKD,EAAOf,UAAU,iBACrBc,OAIb,uBAAGd,UAAU,kBAAkBK,EAAQY,MAAM,EAAG,KAAhD,WC8CDC,G,kNApEbR,MAAQ,CACNS,WAAW,EACXC,OAAQ,I,EAKVC,U,sBAAY,8BAAAC,EAAA,sEACiCC,IAAMC,IAAI,4DAD3C,gBACcJ,EADd,EACFK,KAAQA,KAAQL,OACxB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAFzB,2C,kEAMVQ,KAAKN,c,+BAOG,IAAD,EACuBM,KAAKjB,MAA3BS,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACA,6BAASpB,UAAU,aAChBmB,EACC,yBAAKnB,UAAU,UACX,0BAAMA,UAAU,gBAAhB,eAGJ,yBAAKA,UAAU,UACZoB,EAAOP,KAAI,SAAAe,GAAK,OACf,kBAAC,EAAD,CACEZ,IAAKY,EAAM1B,GACXA,GAAI0B,EAAM1B,GACVC,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAMC,mBACdtB,OAAQqB,EAAMrB,kB,GAvCTuB,IAAMC,YCeVC,E,kLAlBS,IAAD,EACeL,KAAKM,MAA3BC,EADO,EACPA,SAAUC,EADH,EACGA,aACIC,IAAnBF,EAASxB,OACRyB,EAAQE,KAAK,O,+BAIX,IACEH,EAAaP,KAAKM,MAAlBC,SACR,OAAGA,EAASxB,MACD,8BAAOwB,EAASxB,MAAMN,OAEtB,S,GAbE0B,IAAMC,W,MCWZO,MATf,WACI,OACA,yBAAKtC,UAAU,OACX,kBAAC,IAAD,CAAMQ,GAAG,KAAT,QADJ,OAEI,kBAAC,IAAD,CAAMA,GAAG,UAAT,W,MCaO+B,MAbf,WAEC,OACC,kBAAC,IAAD,KACE,kBAAC,EAAD,MADF,KAEE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWxB,IAF1C,KAGE,kBAAC,IAAD,CAAOsB,KAAK,SAASE,UAAW3C,IAHlC,MAIE,kBAAC,IAAD,CAAOyC,KAAK,aAAaE,UAAWV,IAJtC,QCPFW,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,a","file":"static/js/main.acd63634.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nfunction About() {\r\n    return (\r\n        <div className=\"about__container\">\r\n            <span >About this page</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres }){\r\n    return (\r\n    <Link to={{     //Link를 통해 정보를 Router로 보냄\r\n        pathname: `/movie/${id}`,\r\n        state: {\r\n            year,         //year:year = year (in JS)\r\n            title,      \r\n            summary,\r\n            poster,\r\n            genres\r\n        }\r\n    }}>\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title} />\r\n            <div className=\"movie__data\">\r\n                <h3 className=\"movie__title\">{title}</h3>\r\n                <h5 className=\"movie__year\">{year}</h5>\r\n                <ul className=\"genres\">\r\n                    {genres.map((genre, index) => (\r\n                        <li key={index} className=\"genre__genres\">\r\n                            {genre}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\r\n            </div>\r\n        </div>\r\n    </Link>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from 'react';\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n// import PropTypes from \"prop-types\";\r\n\r\nclass Home extends React.Component{\r\n  state = {\r\n    isLoading: true,  //순서2. true\r\n    movies: []\r\n  };\r\n\r\n  //순서6. axios.get() 실행, 시간이 필요하기 때문에 await를 넣음 (async를 사용해야 await를 사용할 수 있음)\r\n  //       jS에게 getMovies 함수에게 시간이 필요하고 기다려야 한다고 말하는 것\r\n  getMovies = async () =>{  //async: 이 함수가 비동기라고 한 것, \"너는 이걸 기다려야해\"라는 말\r\n    const { data: { data: { movies }}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");  //await: 기다리길 원하는 대상=axios\r\n    this.setState({ movies, isLoading: false });   //state의 movies에 axios를 통해 얻은 movies를 넣음    //axios가 끝날 때까지 기다렸다가 게속해\r\n  }                                                //isLoading의 상태 변경    =>refreshing                               \r\n\r\n  componentDidMount(){  //순서4. component가 마운트 되자마자 호출 됨\r\n    this.getMovies();   //순서5. getMovies()함수 실행\r\n\r\n    // setTimeout(() => {\r\n    //   this.setState({ isLoading: false });\r\n    // }, 6000);\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, movies } = this.state; //순서1. isLoading 상태 확인\r\n    return (\r\n    <section className=\"container\">\r\n      {isLoading ? (\r\n        <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading...</span>\r\n        </div>\r\n      ) : (\r\n        <div className=\"movies\">\r\n          {movies.map(movie => (\r\n            <Movie \r\n              key={movie.id}\r\n              id={movie.id}\r\n              year={movie.year}\r\n              title={movie.title}\r\n              summary={movie.summary}\r\n              poster={movie.medium_cover_image}\r\n              genres={movie.genres}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </section>  //순서3. Loding... , application이 마운트 됨 //순서7. movies.map()  =>rendering\r\n    );\r\n  }\r\n//   state = {\r\n//     count: 0\r\n//   };\r\n\r\n//   add = () => {\r\n//     this.setState(current => ({ count: current.count + 1 }));\r\n//   };\r\n//   minus = () => {\r\n//     this.setState(current => ({ count: current.count - 1 }));\r\n//   };\r\n\r\n//   render(){\r\n//     return (\r\n//       <section>\r\n//         <h1>The number is: {this.state.count}</h1>;\r\n//         <button onClick={this.add}>Add</button>\r\n//         <button onClick={this.minus}>Minus</button>\r\n//       </section>\r\n//     );\r\n//   }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nclass Detail extends React.Component {\r\n    componentDidMount(){\r\n        const { location, history } = this.props;   //Detail(App.js)이 Route의 component기 때문에 props가 주어짐.\r\n        if(location.state === undefined) {  // /movie-detail을 직접 입력해 들어갔을 때 state가 undefined이기 때문에 리다이렉트 시킴.\r\n            history.push(\"/\");              // home으로 강제로 가게 만듦. movie-detail로 가기 위해선 클릭으로 가야 함.\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { location } = this.props;\r\n        if(location.state) {\r\n            return <span>{location.state.title}</span>;\r\n        } else {\r\n            return null;\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default Detail;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation() {\r\n    return (\r\n    <div className=\"nav\">\r\n        <Link to=\"/\">Home</Link>    {/*Link는 라우터안에 있어야 함. ( <HashRouter>안의 <Navigation> ) 하지만 모든 걸 라우터안에 넣어야 하는건 아님.*/}\r\n        <Link to=\"/about\">About</Link>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/Home\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\nimport \"./App.css\";\n\nfunction App() {  //router를 만들고 스크린을 넣음. \n                  //url을 이용해서 path를 지정함 (path=\"/about\")\n return (\n  <HashRouter>\n    <Navigation />  {/*Navigation은 props가 없음. */}\n    <Route path=\"/\" exact={true} component={Home} />  {/*exact={true}를 사용해 path가 오로지 \"/\"일 때만 렌더링*/}\n    <Route path=\"/about\" component={About}  />   {/*about으로 가면 About 컴포넌트를 보여줌, about과 About의 이름이 같을 필요는 없음 */}\n    <Route path=\"/movie/:id\" component={Detail} />   {/*Router에 있는 모든 Route들은 기본값으로 props를 가짐 */}\n  </HashRouter>\n );\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('Potato'));"],"sourceRoot":""}