{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0TAiCeA,MA7Bf,YAAyD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC3C,OACA,yBAAKC,UAAU,SACP,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACzC,yBAAKI,UAAU,eACX,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,UACTD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,wBAAIC,IAAKD,EAAOL,UAAU,iBACrBI,OAIb,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAG,KAAhD,UCyDGC,G,kNApEbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAKVC,U,sBAAY,8BAAAC,EAAA,sEACiCC,IAAMC,IAAI,4DAD3C,gBACcJ,EADd,EACFK,KAAQA,KAAQL,OACxB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAFzB,2C,kEAMVQ,KAAKN,c,+BAOG,IAAD,EACuBM,KAAKT,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACA,6BAASX,UAAU,aAChBU,EACC,yBAAKV,UAAU,UACX,0BAAMA,UAAU,gBAAhB,eAGJ,yBAAKA,UAAU,UACZW,EAAOR,KAAI,SAAAgB,GAAK,OACf,kBAAC,EAAD,CACEb,IAAKa,EAAMC,GACXA,GAAID,EAAMC,GACVzB,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAME,mBACdtB,OAAQoB,EAAMpB,kB,GAvCVuB,IAAMC,YCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,a","file":"static/js/main.a89a548e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ year, title, summary, poster, genres }){\r\n    return (\r\n    <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie__data\">\r\n            <h3 className=\"movie__title\">{title}</h3>\r\n            <h5 className=\"movie__year\">{year}</h5>\r\n            <ul className=\"genres\">\r\n                {genres.map((genre, index) => (\r\n                    <li key={index} className=\"genre__genres\">\r\n                        {genre}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from 'react';\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n// import PropTypes from \"prop-types\";\n\nclass App extends React.Component{\n  state = {\n    isLoading: true,  //순서2. true\n    movies: []\n  };\n\n  //순서6. axios.get() 실행, 시간이 필요하기 때문에 await를 넣음 (async를 사용해야 await를 사용할 수 있음)\n  //       jS에게 getMovies 함수에게 시간이 필요하고 기다려야 한다고 말하는 것\n  getMovies = async () =>{  //async: 이 함수가 비동기라고 한 것, \"너는 이걸 기다려야해\"라는 말\n    const { data: { data: { movies }}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");  //await: 기다리길 원하는 대상=axios\n    this.setState({ movies, isLoading: false });   //state의 movies에 axios를 통해 얻은 movies를 넣음    //axios가 끝날 때까지 기다렸다가 게속해\n  }                                                //isLoading의 상태 변경    =>refreshing                               \n\n  componentDidMount(){  //순서4. component가 마운트 되자마자 호출 됨\n    this.getMovies();   //순서5. getMovies()함수 실행\n\n    // setTimeout(() => {\n    //   this.setState({ isLoading: false });\n    // }, 6000);\n  }\n\n  render() {\n    const { isLoading, movies } = this.state; //순서1. isLoading 상태 확인\n    return (\n    <section className=\"container\">\n      {isLoading ? (\n        <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n        </div>\n      ) : (\n        <div className=\"movies\">\n          {movies.map(movie => (\n            <Movie \n              key={movie.id}\n              id={movie.id}\n              year={movie.year}\n              title={movie.title}\n              summary={movie.summary}\n              poster={movie.medium_cover_image}\n              genres={movie.genres}\n            />\n          ))}\n        </div>\n      )}\n    </section>  //순서3. Loding... , application이 마운트 됨 //순서7. movies.map()  =>rendering\n    );\n  }\n//   state = {\n//     count: 0\n//   };\n\n//   add = () => {\n//     this.setState(current => ({ count: current.count + 1 }));\n//   };\n//   minus = () => {\n//     this.setState(current => ({ count: current.count - 1 }));\n//   };\n\n//   render(){\n//     return (\n//       <section>\n//         <h1>The number is: {this.state.count}</h1>;\n//         <button onClick={this.add}>Add</button>\n//         <button onClick={this.minus}>Minus</button>\n//       </section>\n//     );\n//   }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('Potato'));"],"sourceRoot":""}